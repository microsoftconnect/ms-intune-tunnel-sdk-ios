//
//  MAP_NSObject.h
//  mstapnext_injectable_ios
//
//  Stub generated by script on 12/14/2015.
//  Copyright (c) 2015 Mocana. All rights reserved.
//  Licensed to Microsoft under Contract #7267038.
//

/**
 * @file MAP_NSObject.h
 *
 * Doc stub: Contains a stub declaration of interfaces (or categories) from
 * NSObject.h.
 */

#include <TargetConditionals.h>
#import <Foundation/Foundation.h>

/** 
 * Doc stub: No doc
 */
@interface MAP_NSObject : NSObject

@end

@interface MAP_NSObject (NSCoderMethods)

/**
Overridden by subclasses to substitute another object in place of the object that was decoded and subsequently received this message.
*/
- (id) awakeAfterUsingCoder:(NSCoder *)aDecoder;

/**
 * Doc stub: provide a stub method implementation
 */
- (Class) classForCoder;

/**
Overridden by subclasses to substitute another object for itself during encoding.
*/
- (id) replacementObjectForCoder:(NSCoder *)aCoder;

/**
 * Doc stub: provide a stub method implementation
 */
+ (void) setVersion:(NSInteger)aVersion;

/**
 * Doc stub: provide a stub method implementation
 */
+ (NSInteger) version;

@end

@interface MAP_NSObject (NSCopyLinkMoveHandler)

/**
 * Doc stub: provide a stub method implementation
 */
- (BOOL) fileManager:(NSFileManager *)fm shouldProceedAfterError:(NSDictionary *)errorInfo;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) fileManager:(NSFileManager *)fm willProcessPath:(NSString *)path;

@end

@interface MAP_NSObject (NSDelayedPerforming)

/**
 * Doc stub: provide a stub method implementation
 */
+ (void) cancelPreviousPerformRequestsWithTarget:(id)aTarget;

/**
 * Doc stub: provide a stub method implementation
 */
+ (void) cancelPreviousPerformRequestsWithTarget:(id)aTarget selector:(SEL)aSelector object:(id)anArgument;

/**
Invokes a method of the receiver on the current thread using the default mode after a delay.
*/
- (void) performSelector:(SEL)aSelector withObject:(id)anArgument afterDelay:(NSTimeInterval)delay;

/**
Invokes a method of the receiver on the current thread using the specified modes after a delay.
*/
- (void) performSelector:(SEL)aSelector withObject:(id)anArgument afterDelay:(NSTimeInterval)delay inModes:(NSArray<NSString *> *)modes;

@end

@interface MAP_NSObject (NSDiscardableContentProxy)

/**
 * Doc stub: provide a stub method implementation
 */
- (id) autoContentAccessingProxy;

@end

@interface MAP_NSObject (NSErrorRecoveryAttempting)

/**
 * Doc stub: provide a stub method implementation
 */
- (BOOL) attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex delegate:(id)delegate didRecoverSelector:(SEL)didRecoverSelector contextInfo:(void *)contextInfo;

@end

@interface MAP_NSObject (NSKeyValueCoding)

/**
 * Doc stub: provide a stub method implementation
 */
+ (BOOL) accessInstanceVariablesDirectly;

/**
 * Doc stub: provide a stub method implementation
 */
- (NSDictionary<NSString *,id> *) dictionaryWithValuesForKeys:(NSArray<NSString *> *)keys;

/**
 * Doc stub: provide a stub method implementation
 */
- (NSMutableArray *) mutableArrayValueForKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (NSMutableArray *) mutableArrayValueForKeyPath:(NSString *)keyPath;

/**
 * Doc stub: provide a stub method implementation
 */
- (NSMutableOrderedSet *) mutableOrderedSetValueForKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (NSMutableOrderedSet *) mutableOrderedSetValueForKeyPath:(NSString *)keyPath;

/**
 * Doc stub: provide a stub method implementation
 */
- (NSMutableSet *) mutableSetValueForKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (NSMutableSet *) mutableSetValueForKeyPath:(NSString *)keyPath;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) setNilValueForKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) setValue:(id)value forKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) setValue:(id)value forKeyPath:(NSString *)keyPath;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) setValue:(id)value forUndefinedKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) setValuesForKeysWithDictionary:(NSDictionary<NSString *,id> *)keyedValues;

/**
 * Doc stub: provide a stub method implementation
 */
- (BOOL) validateValue:(id  _Nullable *)ioValue forKey:(NSString *)inKey error:(NSError * _Nullable *)outError;

/**
 * Doc stub: provide a stub method implementation
 */
- (BOOL) validateValue:(id  _Nullable *)ioValue forKeyPath:(NSString *)inKeyPath error:(NSError * _Nullable *)outError;

/**
 * Doc stub: provide a stub method implementation
 */
- (id) valueForKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (id) valueForKeyPath:(NSString *)keyPath;

/**
 * Doc stub: provide a stub method implementation
 */
- (id) valueForUndefinedKey:(NSString *)key;

@end

@interface MAP_NSObject (NSKeyValueObserverNotification)

/**
 * Doc stub: provide a stub method implementation
 */
- (void) didChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) didChangeValueForKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) didChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) willChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) willChangeValueForKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) willChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects;

@end

@interface MAP_NSObject (NSKeyValueObserverRegistration)

/**
 * Doc stub: provide a stub method implementation
 */
- (void) addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;

@end

@interface MAP_NSObject (NSKeyValueObserving)

/**
 * Doc stub: provide a stub method implementation
 */
- (void) observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary<NSString *,id> *)change context:(void *)context;

@end

@interface MAP_NSObject (NSKeyValueObservingCustomization)

/**
 * Doc stub: provide a stub method implementation
 */
+ (BOOL) automaticallyNotifiesObserversForKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
+ (NSSet<NSString *> *) keyPathsForValuesAffectingValueForKey:(NSString *)key;

/**
 * Doc stub: provide a stub method implementation
 */
- (void *) observationInfo;

/**
 * Doc stub: provide a stub method implementation
 */
- (void) setObservationInfo:(void *)observationInfo;

@end

@interface MAP_NSObject (NSKeyedArchiverObjectSubstitution)

/**
 * Doc stub: provide a stub method implementation
 */
+ (NSArray<NSString *> *) classFallbacksForKeyedArchiver;

/**
 * Doc stub: provide a stub method implementation
 */
- (Class) classForKeyedArchiver;

/**
Overridden by subclasses to substitute another object for itself during keyed archiving.
*/
- (id) replacementObjectForKeyedArchiver:(NSKeyedArchiver *)archiver;

@end

@interface MAP_NSObject (NSKeyedUnarchiverObjectSubstitution)

/**
 * Doc stub: provide a stub method implementation
 */
+ (Class) classForKeyedUnarchiver;

@end

@interface MAP_NSObject (NSThreadPerformAdditions)

/**
Invokes a method of the receiver on the specified thread using the default mode.
*/
- (void) performSelector:(SEL)aSelector onThread:(NSThread *)thr withObject:(id)arg waitUntilDone:(BOOL)wait;

/**
Invokes a method of the receiver on the specified thread using the specified modes.
*/
- (void) performSelector:(SEL)aSelector onThread:(NSThread *)thr withObject:(id)arg waitUntilDone:(BOOL)wait modes:(NSArray<NSString *> *)array;

/**
Invokes a method of the receiver on a new background thread.
*/
- (void) performSelectorInBackground:(SEL)aSelector withObject:(id)arg;

/**
Invokes a method of the receiver on the main thread using the default mode.
*/
- (void) performSelectorOnMainThread:(SEL)aSelector withObject:(id)arg waitUntilDone:(BOOL)wait;

/**
Invokes a method of the receiver on the main thread using the specified modes.
*/
- (void) performSelectorOnMainThread:(SEL)aSelector withObject:(id)arg waitUntilDone:(BOOL)wait modes:(NSArray<NSString *> *)array;

@end

